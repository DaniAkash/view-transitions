---
const { pathname } = Astro.url;
const currentPage = parseInt(pathname.split("/").pop() ?? "") || 1;
import BaseLayout from "./BaseLayout.astro";
import "./presentation.css";
---

<BaseLayout>
  <div class="flex h-screen w-screen flex-col items-center justify-center">
    <div class="flex flex-col items-center justify-center gap-16">
      <div class="flex w-full items-center justify-between">
        <a
          class={currentPage <= 1 ? "opacity-0 pointer-events-none" : ""}
          href={currentPage <= 2
            ? "/view-transitions/presentation"
            : `${currentPage - 1}`}>⬅️ Back</a
        >
        <h1 class="text-2xl">Presentation</h1>
        <a
          class={currentPage >= 5 ? "opacity-0 pointer-events-none" : ""}
          href={`/view-transitions/presentation/${currentPage + 1}`}>Next ➡️</a
        >
      </div>
      <div
        id="presentation-canvas"
        class="flex h-[28rem] w-[48rem] flex-col items-center justify-center gap-8 shadow-md ring-1"
      >
        <slot />
      </div>
    </div>
    <!-- <script is:inline>
      let viewTransitionStyleSheet = null; // Reference to the stylesheet

      // Function to add the @view-transition rule
      function addViewTransitionStyles() {
        if (!viewTransitionStyleSheet) {
          // Create a new stylesheet
          viewTransitionStyleSheet = new CSSStyleSheet();
          // Add the @view-transition rule
          viewTransitionStyleSheet.insertRule(`
      @view-transition {
        navigation: auto;
      }
    `);
          // Attach the stylesheet to the document
          document.adoptedStyleSheets = [
            ...document.adoptedStyleSheets,
            viewTransitionStyleSheet,
          ];
        }
      }

      // Function to remove the @view-transition rule
      function removeViewTransitionStyles() {
        if (viewTransitionStyleSheet) {
          // Remove the stylesheet from adoptedStyleSheets
          document.adoptedStyleSheets = document.adoptedStyleSheets.filter(
            (sheet) => sheet !== viewTransitionStyleSheet,
          );
          // Clear the reference
          viewTransitionStyleSheet = null;
        }
      }

      addViewTransitionStyles();
    </script> -->
    <script is:inline>
      const getSlideNo = (url) => parseInt(url.split("/").pop() ?? "") || 1;
      const currentSlide = getSlideNo(window.location.pathname);
      // Old Page slide to the left
      window.addEventListener("pageswap", async (e) => {
        if (e.viewTransition) {
          const targetUrl = e.activation.entry.url;
          if (targetUrl.includes("presentation")) {
            const targetSlide = getSlideNo(targetUrl);

            if (currentSlide > targetSlide) {
              document.getElementById(
                "presentation-canvas",
              ).style.viewTransitionName = "presentation-canvas-reverse";
            } else {
              document.getElementById(
                "presentation-canvas",
              ).style.viewTransitionName = "presentation-canvas";
            }

            await e.viewTransition.finished;

            document.getElementById(
              "presentation-canvas",
            ).style.viewTransitionName = "";
          }
        }
      });

      // New Page slide in from the right
      window.addEventListener("pagereveal", async (e) => {
        if (e.viewTransition) {
          const fromUrl = navigation.activation.from.url;
          const currentUrl = navigation.activation.entry.url;
          if (
            fromUrl.includes("presentation") &&
            currentUrl.includes("presentation")
          ) {
            const fromSlide = getSlideNo(fromUrl);
            const currentSlide = getSlideNo(currentUrl);

            if (fromSlide > currentSlide) {
              document.getElementById(
                "presentation-canvas",
              ).style.viewTransitionName = "presentation-canvas-reverse";
            } else {
              document.getElementById(
                "presentation-canvas",
              ).style.viewTransitionName = "presentation-canvas";
            }

            await e.viewTransition.ready;

            document.getElementById(
              "presentation-canvas",
            ).style.viewTransitionName = "";
          }
        }
      });
    </script>
  </div>
</BaseLayout>
